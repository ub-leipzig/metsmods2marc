buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.1"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'net.researchgate.release' version '2.4.0'
}

configure(allprojects) { project ->
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'pmd'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'jacoco'

    group = 'de.ubleipzig'

    ext {
        slf4jVersion = '1.7.21'
        jenaVersion = '3.6.0'
        trellisVersion = '0.5.1'
        commonsRdfVersion = '0.5.0'
        camelVersion = '2.20.0'
        jaxbVersion = '2.3.0'
        jsonldVersion = "0.11.1"
        logbackVersion = '1.2.3'
        apiguardianVersion = '1.0.0'
        junitVersion = '5.0.1'
        junitPlatformVersion = '1.0.1'
    }

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

}

project("xslt") {
    apply plugin: 'application'

    sourceCompatibility = 1.8
    mainClassName = "de.ubleipzig.metsmods2marc.IngesterDriver"
    jar.baseName = "ingester"

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.marc4j', name: 'marc4j', version: '2.8.3'
        testCompile group: 'org.apache.solr', name: 'solr-solrj', version: '7.2.1'
        testCompile group: 'org.apache.jena', name: 'jena-osgi', version: jenaVersion
        testCompile group: 'com.github.jsonld-java', name: 'jsonld-java', version: jsonldVersion
        testCompile group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'
        compile group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'
        compile group: 'org.apache.commons', name: 'commons-rdf-api', version: commonsRdfVersion
        compile group: 'org.trellisldp', name: 'trellis-api', version: trellisVersion
        compile group: 'org.trellisldp', name: 'trellis-io-jena', version: trellisVersion
        compile group: 'org.apache.commons', name: 'commons-rdf-jena', version: commonsRdfVersion
        compile group: 'org.apache.jena', name: 'jena-osgi', version: jenaVersion
        compile group: 'com.github.jsonld-java', name: 'jsonld-java', version: jsonldVersion
        compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        compile group: 'org.marc4j', name: 'marc4j', version: '2.8.3'
        compile group: 'org.apache.solr', name: 'solr-solrj', version: '7.2.1'
        compile group: 'commons-io', name: 'commons-io', version: '2.5'
        compile group: 'org.xmlbeam', name: 'xmlprojector', version: '1.4.8'
        compile group: 'org.apache.jena', name: 'jena-arq', version: '3.1.0'
        compile group: 'org.apache.jena', name: 'jena-core', version: '3.1.0'
        compile group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.8.0-7'
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        compile group: 'cool.pandora', name: 'modeller-fedora', version: '1.2.0'
    }
}

project("api") {
    description = 'A Camel service that transforms resources with XSLT'
    dependencies {
        compile group: 'org.apache.camel', name: 'camel-jetty9', version: camelVersion
        compile group: 'org.apache.camel', name: 'camel-http4', version: camelVersion
        compile group: 'org.apache.camel', name: 'camel-saxon', version: camelVersion
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: jaxbVersion
        compile group: 'javax.activation', name: 'activation', version: '1.1.1'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        testImplementation group: 'org.apiguardian', name: 'apiguardian-api', version: apiguardianVersion
        testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
        testImplementation group: 'org.apache.camel', name: 'camel-test', version: camelVersion
        testImplementation group: 'org.apache.camel', name: 'camel-jetty9', version: camelVersion
        testImplementation group: 'org.apache.camel', name: 'camel-http4', version: camelVersion
        testImplementation group: 'org.apache.camel', name: 'camel-saxon', version: camelVersion
        testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: jaxbVersion
        testImplementation group: 'javax.activation', name: 'activation', version: '1.1.1'
        testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        testImplementation group: 'org.apache.camel', name: 'camel-test-blueprint', version: camelVersion
    }
}

subprojects {
    checkstyle {
        configFile = rootProject.file('build/checkstyle/checkstyle.xml')
        configProperties.checkstyleConfigDir = rootProject.file('build/checkstyle/')
        toolVersion = "8.1"
    }

    jacoco {
        toolVersion = "0.7.9"
    }

    license {
        include "**/*.java"
        header rootProject.file('build/license/HEADER.txt')
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
}

configurations {
    buildToolsConfig
}


dependencies {
    buildToolsConfig "cool.pandora:pandora-build-tools:0.1.3"
}

task processBuildTools(type: Copy) {
    from {
        configurations.buildToolsConfig.collect {
            zipTree(it).matching {
                include 'checkstyle/*.xml'
                include 'license/*.txt'
            }
        }
    }
    into 'build'
}

check.dependsOn processBuildTools